## For information on how to use thie file, see the documentation at the repo home:
## github.com/foundrycode/boltredirector

# Options - Set Options for the Extension

options:

    # Auto slugging should be enabled. Makes slugs friendly. Like cats.

    autoSlug: true

    # If there is a query string, append it to the destination path.
    # Disabled by default as Bolt generally doesn't need them. But, if
    # you have an extension that does need them, best to turn it on.

    appendQueryString: false

# Redirects - The Main Redirects for this Installation

redirects:

    # Blog overrides.

    # https://docs.google.com/spreadsheets/d/1b3NvCLTMRUFjrgkZNGp6MScAcUELIXHv2-GDxozAL9k/edit#gid=0': '/files/Europeana_Professional/EuropeanaTech/EuropeanaTech_taskforces/Mapping_Refinement_Extension//EDM%20mappings%20refinements%20extensions%20Overview.xlsx'
    # Europeana Semantic Elements Specification and Guidelines': '/files/Europeana_Professional/Share_your_data/Technical_requirements/ESE_Documentation//Europeana%20Semantic%20Elements%20Specification%20and%20Guidelines%2014%20July%202013.pdf'
    # http://www.cidoc-crm.org/docs/EDM-DC-ORE-CRM-FRBR_Integration_ORE_fix.ppt': '/files/Europeana_Professional/EuropeanaTech/EuropeanaTech_taskforces/EDM_FRBRoo//EDM-DC-ORE-CRM-FRBR_Integration_ORE_fix.ppt'


    # html:
    #     from: '{path}.{ext}'
    #     to: '{path}'

# Variables
#
# A simple array to make variable replacements in destination paths using the
# {@<variable>} syntax. Be sure to avoid using global variables here as
# they'll be overwritten!

variables:



# JIT (Just In Time) Replacements
#
# These replacements are made just before the actual redirect, so they
# must match any parts in `to` patterns from the above array.
#
# For conciseness, try to match an entire destination, as other URIs
# could be inadvertantly affected. If other URIs won't contain the
# string, then you can keep it as short as needed.
#
# Also, regular expressions are allowed here. Capture with \\n.

jits:
  '/foo': '/bar'
